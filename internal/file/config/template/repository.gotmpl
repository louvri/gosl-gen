package repository

import (
	"context"

	"github.com/louvri/gosl/builder"
	"github.com/louvri/gosl/transformer"
)

type Repository interface {
	Get(ctx context.Context, param builder.QueryParams,trans ...transformer.Transformer) (interface{},error)
	All(ctx context.Context, param builder.QueryParams, trans ...transformer.Transformer) (interface{},error)
	Set(ctx context.Context, model interface{}) (int64,error)
	Query(ctx context.Context, params []builder.QueryParams, trans ...transformer.Transformer) (interface{},error)
	PrepareQuery(ctx context.Context, params []builder.QueryParams) error
	Count(ctx context.Context, params []builder.QueryParams) (total int, err error)
	PrepareCount(ctx context.Context, params []builder.QueryParams) error
	Insert(ctx context.Context, model interface{}) (int64,error)
	PrepareInsert(ctx context.Context, model interface{}) error
	Update(ctx context.Context, model interface{}, params builder.QueryParams) error
	PrepareUpdate(ctx context.Context, model interface{}, params builder.QueryParams) error
	Upsert(ctx context.Context, model interface{}) (int64,error)
	PrepareUpsert(ctx context.Context, model interface{}) error
	Delete(ctx context.Context, params builder.QueryParams) error
	PrepareDelete(ctx context.Context, params builder.QueryParams) error
}
